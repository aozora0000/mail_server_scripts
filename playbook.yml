- hosts: all
  vars_files:
    - vars/main.yml
    - vars/mail.yml
    - vars/alias.yml
    - vars/aws.yml
    - vars/spam.yml
    - vars/mailing.yml
    - vars/outbound.yml
  tasks:
    - name: fastermirrorレポジトリ設定変更
      command: echo include_only=.jp >> /etc/yum/pluginconf.d/fastestmirror.conf

    - name: epelレポジトリインストール
      yum: name=http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm

    - name: pythonパッケージインストール
      yum: name=python-setuptools state=installed
    - name: pipインストール
      easy_install: name=pip
    - name: awscliインストール
      pip: name=awscli

    - name: aws設定ファイル設置
      template: src=./files/.bashrc.j2 dest=/root/.bashrc

    - name: CRON用シェルスクリプト設置
      template: src=./files/{{ item }}.j2 dest=/root/{{ item }} mode="a+x"
      with_items:
          - aws.sh
          - reporter.sh

    - name: Postfix/Dovecot/その他インストール
      yum: name={{item}} state=installed
      with_items:
          - postfix
          - dovecot
          - htop
          - amavisd-new
          - clamd
          - spamassassin

    - name: メールグループ作成
      group: name=vmailuser gid=10000 state=present
    - name: メールユーザー作成
      user:  name=vmailuser uid=10000 group=vmailuser

    - name: PostfixへMTAを変更
      shell: alternatives --set mta /usr/sbin/sendmail.postfix

    - name: メールスプールディレクトリの作成
      file: path=/var/spool/virtual state=directory group=vmailuser owner=vmailuser

    - name: postfix関連設定ファイルコピー
      template: src=./files/postfix/{{ item }}.j2 dest=/etc/postfix/{{ item }}
      with_items:
          - main.cf
          - master.cf

    - name: dovecot関連設定ファイルコピー
      copy: src=./files/dovecot/{{ item }} dest=/etc/dovecot/{{ item }} force=yes
      with_items:
          - master.conf
          - conf.d/10-master.conf

    - name: amavisd関連設定ファイルコピー
      template: src=./files/amavisd/{{ item }}.j2 dest=/etc/amavisd/{{ item }}
      with_items:
          - amavisd.conf

    - name: spamassassinのホワイト・ブラックリスト設置
      template: src=./files/spamassassin/local.cf.j2 dest=/etc/mail/spamassassin/local.cf
      ignore_errors: true

    - name: ドメイン/エイリアス設定クリア
      file: path={{ item }} state=absent
      with_items:
          - /etc/postfix/virtual-mailbox
          - /etc/postfix/virtual-alias
          - /etc/postfix/transport
          - /etc/dovecot/passwd
      ignore_errors: true

    - name: 管理者メールの設定
      shell: |
            echo "virusalert: {{ mailmaster }}" > /etc/aliases

    - name: ドメイン設定
      shell: |
            echo "{{ item.user }}@{{ item.domain }} {{ item.domain }}/{{ item.user }}/Maildir/" >> /etc/postfix/virtual-mailbox
            echo "{{ item.user }}@{{ item.domain }}:`doveadm pw -p {{ item.pass }}`" >> /etc/dovecot/passwd
      with_items: mail

    - name: エイリアス設定
      shell: echo "{{ item.receive }} {{ item.forward }}" >> /etc/postfix/virtual-alias
      with_items: alias
      ignore_errors: true

    - name: 配信制限設定
      shell: echo "{{ item}}  slow:" >> /etc/postfix/transport
      with_items: outbound.domains
      ignore_errors: true

    - name: メーリングリスト設定
      shell: echo "{{ item.master }} {{ item.user|join(', ') }}" >> /etc/postfix/virtual-alias
      with_items: mailing
      ignore_errors: true

    - name: バーチャルドメイン/エイリアス設定
      shell: |
            postmap /etc/postfix/virtual-mailbox
            postmap /etc/postfix/virtual-alias
            postmap /etc/postfix/transport
            newaliases

    - name: awsバックアップのcron設定
      cron: name="s3バックアップ"
            job="bash /root/aws.sh >> /var/log/s3log.log"
            minute="{{ s3backup.minute }}"
            hour="{{ s3backup.hour }}"
            day="{{ s3backup.day}}"
            weekday="{{ s3backup.weekday }}"
            month="{{ s3backup.month }}"

    - name: メールディレクトリ容量レポーターのcron設定
      cron: name="ディレクトリレポーター"
            job="bash /root/reporter.sh > /dev/null"
            minute="{{ reporter.minute }}"
            hour="{{ reporter.hour }}"
            day="{{ reporter.day}}"
            weekday="{{ reporter.weekday }}"
            month="{{ reporter.month }}"

    - name: awsからバックアップメールを取得する
      shell: |
            aws s3 sync s3://{{ aws.s3.backet }} /var/spool/virtual
            chown -R vmailuser:vmailuser /var/spool/virtual

    - name: サービス再起動
      service: name={{ item }} state=restarted enabled=yes
      with_items:
          - postfix
          - dovecot
          - clamd.amavisd
          - spamassassin
          - amavisd

    - name: ウィルス定義ファイルの更新
      shell: freshclam
